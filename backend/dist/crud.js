"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = void 0;

var _corsWrapper = require("./corsWrapper");

var _awsSdk = _interopRequireDefault(require("aws-sdk"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

const create = (0, _corsWrapper.corsWrapper)(async event => {
  var _body$nullish, _body$sample;

  const docClient = new _awsSdk.default.DynamoDB.DocumentClient();
  const body = JSON.parse(event.body);
  const nullish = (_body$nullish = body.nullish) !== null && _body$nullish !== void 0 ? _body$nullish : 'Default';
  const optionalChaining = (_body$sample = body.sample) === null || _body$sample === void 0 ? void 0 : _body$sample.optionalChaning;

  try {
    await docClient.put({
      TableName: process.env.DYNAMODB_CRUD_TABLE,
      Item: { ...body,
        createDate: Date(),
        nullish,
        optionalChaining
      }
    }).promise();
    const result = await docClient.scan({
      TableName: process.env.DYNAMODB_CRUD_TABLE
    }).promise();
    return {
      statusCode: 200,
      body: JSON.stringify({
        success: true,
        result
      })
    };
  } catch (e) {
    return {
      statusCode: 500,
      body: JSON.stringify({
        success: false,
        message: e.message
      })
    };
  }
});
exports.create = create;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NydWQuanMiXSwibmFtZXMiOlsiY3JlYXRlIiwiZG9jQ2xpZW50IiwiQVdTIiwiYm9keSIsIkpTT04iLCJldmVudCIsIm51bGxpc2giLCJvcHRpb25hbENoYWluaW5nIiwiVGFibGVOYW1lIiwicHJvY2VzcyIsIkl0ZW0iLCJjcmVhdGVEYXRlIiwiRGF0ZSIsInJlc3VsdCIsIkRZTkFNT0RCX0NSVURfVEFCTEUiLCJzdGF0dXNDb2RlIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQSxZQUFBLEdBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQTs7QUFDQSxJQUFBLE9BQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQTs7Ozs7Ozs7QUFFTyxNQUFNQSxNQUFNLEdBQUcsQ0FBQSxHQUFBLFlBQUEsQ0FBQSxXQUFBLEVBQVksTUFBQSxLQUFBLElBQWU7QUFBQSxNQUFBLGFBQUEsRUFBQSxZQUFBOztBQUMvQyxRQUFNQyxTQUFTLEdBQUcsSUFBSUMsT0FBQUEsQ0FBQUEsT0FBQUEsQ0FBQUEsUUFBQUEsQ0FBdEIsY0FBa0IsRUFBbEI7QUFDQSxRQUFNQyxJQUFJLEdBQUdDLElBQUksQ0FBSkEsS0FBQUEsQ0FBV0MsS0FBSyxDQUE3QixJQUFhRCxDQUFiO0FBQ0EsUUFBTUUsT0FBTyxHQUFBLENBQUEsYUFBQSxHQUFHSCxJQUFJLENBQVAsT0FBQSxNQUFBLElBQUEsSUFBQSxhQUFBLEtBQUEsS0FBQSxDQUFBLEdBQUEsYUFBQSxHQUFiLFNBQUE7QUFDQSxRQUFNSSxnQkFBZ0IsR0FBQSxDQUFBLFlBQUEsR0FBR0osSUFBSSxDQUFQLE1BQUEsTUFBQSxJQUFBLElBQUEsWUFBQSxLQUFBLEtBQUEsQ0FBQSxHQUFBLEtBQUEsQ0FBQSxHQUFHQSxZQUFBQSxDQUF6QixlQUFBOztBQUNBLE1BQUk7QUFDRixVQUFNLFNBQVMsQ0FBVCxHQUFBLENBQ0M7QUFDSEssTUFBQUEsU0FBUyxFQUFFQyxPQUFPLENBQVBBLEdBQUFBLENBRFIsbUJBQUE7QUFFSEMsTUFBQUEsSUFBSSxFQUFFLEVBQUUsR0FBRixJQUFBO0FBQVdDLFFBQUFBLFVBQVUsRUFBRUMsSUFBdkIsRUFBQTtBQUFBLFFBQUEsT0FBQTtBQUF3Q0wsUUFBQUE7QUFBeEM7QUFGSCxLQURELEVBQU4sT0FBTSxFQUFOO0FBT0EsVUFBTU0sTUFBTSxHQUFHLE1BQU0sU0FBUyxDQUFULElBQUEsQ0FBZTtBQUFFTCxNQUFBQSxTQUFTLEVBQUVDLE9BQU8sQ0FBUEEsR0FBQUEsQ0FBWUs7QUFBekIsS0FBZixFQUFyQixPQUFxQixFQUFyQjtBQUVBLFdBQU87QUFDTEMsTUFBQUEsVUFBVSxFQURMLEdBQUE7QUFFTFosTUFBQUEsSUFBSSxFQUFFLElBQUksQ0FBSixTQUFBLENBQWU7QUFBRWEsUUFBQUEsT0FBTyxFQUFULElBQUE7QUFBaUJILFFBQUFBO0FBQWpCLE9BQWY7QUFGRCxLQUFQO0FBVkYsR0FBQSxDQWNFLE9BQUEsQ0FBQSxFQUFVO0FBQ1YsV0FBTztBQUNMRSxNQUFBQSxVQUFVLEVBREwsR0FBQTtBQUVMWixNQUFBQSxJQUFJLEVBQUUsSUFBSSxDQUFKLFNBQUEsQ0FBZTtBQUFFYSxRQUFBQSxPQUFPLEVBQVQsS0FBQTtBQUFrQkMsUUFBQUEsT0FBTyxFQUFFQyxDQUFDLENBQUNEO0FBQTdCLE9BQWY7QUFGRCxLQUFQO0FBSUQ7QUF4QkksQ0FBZSxDQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29yc1dyYXBwZXIgfSBmcm9tICcuL2NvcnNXcmFwcGVyJztcbmltcG9ydCBBV1MgZnJvbSAnYXdzLXNkayc7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSBjb3JzV3JhcHBlcihhc3luYyBldmVudCA9PiB7XG4gIGNvbnN0IGRvY0NsaWVudCA9IG5ldyBBV1MuRHluYW1vREIuRG9jdW1lbnRDbGllbnQoKTtcbiAgY29uc3QgYm9keSA9IEpTT04ucGFyc2UoZXZlbnQuYm9keSk7XG4gIGNvbnN0IG51bGxpc2ggPSBib2R5Lm51bGxpc2ggPz8gJ0RlZmF1bHQnO1xuICBjb25zdCBvcHRpb25hbENoYWluaW5nID0gYm9keS5zYW1wbGU/Lm9wdGlvbmFsQ2hhbmluZztcbiAgdHJ5IHtcbiAgICBhd2FpdCBkb2NDbGllbnRcbiAgICAgIC5wdXQoe1xuICAgICAgICBUYWJsZU5hbWU6IHByb2Nlc3MuZW52LkRZTkFNT0RCX0NSVURfVEFCTEUsXG4gICAgICAgIEl0ZW06IHsgLi4uYm9keSwgY3JlYXRlRGF0ZTogRGF0ZSgpLCBudWxsaXNoLCBvcHRpb25hbENoYWluaW5nIH1cbiAgICAgIH0pXG4gICAgICAucHJvbWlzZSgpO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZG9jQ2xpZW50LnNjYW4oeyBUYWJsZU5hbWU6IHByb2Nlc3MuZW52LkRZTkFNT0RCX0NSVURfVEFCTEUgfSkucHJvbWlzZSgpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgc3VjY2VzczogdHJ1ZSwgcmVzdWx0IH0pXG4gICAgfTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXNDb2RlOiA1MDAsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBlLm1lc3NhZ2UgfSlcbiAgICB9O1xuICB9XG59KTtcbiJdfQ==